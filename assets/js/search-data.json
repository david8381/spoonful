{
  
    
        "post0": {
            "title": "How adding tests and documentation for your code is like drowning.",
            "content": "Drowning as a Service (DASS) . As a young child I saw the movie “The Abyss.” I don’t remember what it’s about, other than it involved a submarine, the ocean, and I think aliens. . One thing I do remember is the special sciency oxygenated water that you can’t drown it. If someone tries drowning you in it, You might not like it at first. You might panic. It might be more effort than just breathing regular air. But you’re going to be OK. And you get all the benefits that go with being able to breathe under water. . Abyss Rat Drowning Clip . This lesson of just allowing yourself to get used to the pain for the greater good has stuck with me. I remember when someone first forced tests on me. It was painful, but I got used to it pretty quickly and started enjoying its benefits. I think a lot of other good practices are like this (code reviews, typing (in python), documentation.) . Conclusion . So, if someone places their hand on your head and tries to (or so it seems) drown you, don’t immediately react. Take a deep breath (if possible) and ask yourself if you really need to resist this. . How could you be drowning yourself today? . Who could you be drowning? . Note . Please don’t use this as an excuse to force emacs on people. .",
            "url": "https://david8381.github.io/spoonful/markdown/2020/08/14/drowning_as_a_service.html",
            "relUrl": "/markdown/2020/08/14/drowning_as_a_service.html",
            "date": " • Aug 14, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Amazon Prime 0% Interest",
            "content": "When purchasing items on amazon.com using Amazon&#39;s Amazon Prime credit card, I get 5% cash back OR I have the option to get 6 months 0% financing while making 6 equal monthly payments. However, giving up the 5% cashback is equivalent to paying interest. The goal of this post is to determine how much interest is effectively paid. . product_cost = 100 cash_back_rate = .05 loan_term_months = 6 monthly_payment = product_cost / loan_term_months debt_free_cost = product_cost - product_cost * cash_back_rate debt_cost = product_cost interest_paid = debt_cost - debt_free_cost . print(f&quot;Purchase a product for ${product_cost}&quot;) print(f&#39;Monthly Payments: ${round(monthly_payment,2)} for {loan_term_months} months. n&#39;) debt_level = product_cost annual_debt_dollars = 0 for month in range(1, loan_term_months+1): annual_debt_dollars += debt_level/12 print(f&#39;Debt Level after {month} Months: {debt_level}&#39;) debt_level = debt_level - monthly_payment effective_interest_rate = interest_paid/annual_debt_dollars print(f&quot;Giving up {cash_back_rate*100}% cash back is equivalent to an effective Interest Rate: {effective_interest_rate*100}%&quot;) . Purchase a product for $100 Monthly Payments: $16.67 for 6 months. Debt Level after 1 Months: 100 Debt Level after 2 Months: 83.33333333333333 Debt Level after 3 Months: 66.66666666666666 Debt Level after 4 Months: 49.999999999999986 Debt Level after 5 Months: 33.333333333333314 Debt Level after 6 Months: 16.666666666666647 Giving up 5.0% cash back is equivalent to an effective Interest Rate: 17.14285714285715% . CHECK . interest_paid = 0 debt_level = product_cost for month in range(1, loan_term_months+1): interest_paid += effective_interest_rate/12 * debt_level debt_level = debt_level - monthly_payment print(interest_paid) . 5.000000000000001 .",
            "url": "https://david8381.github.io/spoonful/2020/08/12/AmazonNoInterest.html",
            "relUrl": "/2020/08/12/AmazonNoInterest.html",
            "date": " • Aug 12, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://david8381.github.io/spoonful/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://david8381.github.io/spoonful/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://david8381.github.io/spoonful/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}